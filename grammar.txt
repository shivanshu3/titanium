start
    = literal

literal
    = number
    / boolean
    / string

number
    = digits:[0-9]+ { return parseInt(digits.join(''), 10); }

boolean
    = 'true'
    / 'false'
    {
        if (text() == 'true') {
            return true;
        } else {
            return false;
        }
    }

string
    = quotation_mark chars:char* quotation_mark { return chars.join(""); }

char
    = unescaped
    / escape
    sequence:(
        '"'
        / '\\'
        / '/'
        / 'b' { return '\b'; }
        / 'f' { return '\f'; }
        / 'n' { return '\n'; }
        / 'r' { return '\r'; }
        / 't' { return '\t'; }
        / 'u' digits:$(HEXDIG HEXDIG HEXDIG HEXDIG) {
            return String.fromCharCode(parseInt(digits, 16));
        }
    )
    { return sequence; }

escape
    = '\\'

quotation_mark
    = '`'

unescaped
    = [^\0-\x1F\x60\x5C]

// ----- Core ABNF Rules -----
// See RFC 4234, Appendix B (http://tools.ietf.org/html/rfc4234).
DIGIT  = [0-9]
HEXDIG = [0-9a-f]i